{"version":3,"sources":["components/Filter.js","components/Notification.js","components/Person.js","services/persons.js","components/Persons.js","components/PersonForm.js","App.js","index.js"],"names":["Filter","filter","setNewFilter","value","onChange","event","target","Notification","message","level","className","Person","props","name","number","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","setPersons","map","person","key","onClick","window","confirm","personService","_response","newPersons","p","removePerson","PersonForm","setNotification","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","personToUpdate","existingPerson","find","personsService","updatedPersons","setTimeout","catch","error","status","createdPerson","concat","type","App","notification","useEffect","initialPersons","visiblePersons","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cbec52d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, setNewFilter }) => {\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    return (\n        <div>\n            filter shown with <input value={filter} onChange={handleFilterChange} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message, level }) => {\n    if (!message) {\n        return null\n    }\n\n    return (\n        <div className={`notification ${level}`}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Person = (props) => {\n    return (\n        <span>{props.name} {props.number}</span>\n    )\n}\n\nexport default Person","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\nimport Person from './Person'\nimport personService from '../services/persons'\n\nconst Persons = ({ persons, setPersons }) => {\n  const removePerson = (person) => {\n    window.confirm(`Delete ${person.name}?`)\n\n    personService\n      .remove(person.id)\n      .then(_response => {\n        const newPersons = persons.filter(p => p.id !== person.id)\n        setPersons(newPersons)\n      })\n  }\n\n  return (\n    persons.map(person =>\n      <div key={person.id}>\n        <Person\n          name={person.name}\n          number={person.number}\n        />\n        <button onClick={() => removePerson(person)}>\n          delete\n        </button>\n      </div>\n    )\n  )\n}\n\nexport default Persons","import React, { useState } from 'react'\nimport personsService from '../services/persons'\n\nconst PersonForm = ({ persons, setPersons, setNotification }) => {\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n\n    const handleNewName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const findPersonWith = (name) => {\n        return persons.find(p => p.name === name)\n    }\n\n    const createPerson = (newPerson) => {\n        personsService\n            .create(newPerson)\n            .then(createdPerson => {\n                setPersons(persons.concat(createdPerson))\n                setNotification({\n                    message: `Added ${createdPerson.name}`,\n                    level: 'info'\n                })\n                setTimeout(() => {\n                    setNotification({})\n                }, 5000)\n                setNewName('')\n                setNewNumber('')\n            })\n    }\n\n    const updatePerson = (personToUpdate) => {\n        personsService\n            .update(personToUpdate.id, personToUpdate)\n            .then(() => {\n                const updatedPersons = persons.map(p =>\n                    p.id === personToUpdate.id ? personToUpdate : p\n                )\n                setPersons(updatedPersons)\n                setNotification({\n                    message: `Updated ${personToUpdate.name}`,\n                    level: 'info'\n                })\n                setTimeout(() => {\n                    setNotification({})\n                }, 5000)\n                setNewName('')\n                setNewNumber('')\n            })\n            .catch(error => {\n                if (error.response && error.response.status === 404) {\n                    setNotification({\n                        message: `${personToUpdate.name} has already been removed from server`,\n                        level: 'error'\n                    })\n                    setTimeout(() => {\n                        setNotification({})\n                    }, 5000)\n                    setNewName('')\n                    setNewNumber('')\n                }\n            })\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        if (newName === '' || newNumber === '')\n            return\n\n        const person = { name: newName, number: newNumber }\n        const existingPerson = findPersonWith(newName)\n        if (existingPerson) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                person.id = existingPerson.id\n                updatePerson(person)\n            }\n        } else {\n            createPerson(person)\n        }\n    }\n\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={handleNewName} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNewNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [notification, setNotification] = useState({})\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const [filter, setNewFilter] = useState('')\n\n    const visiblePersons =\n        persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notification.message} level={notification.level} />\n            <Filter filter={filter} setNewFilter={setNewFilter} />\n\n            <h2>add a new</h2>\n            <PersonForm\n                persons={persons} \n                setPersons={setPersons} \n                setNotification={setNotification} />\n\n            <h2>Numbers</h2>\n            <Persons persons={visiblePersons} setPersons={setPersons} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}